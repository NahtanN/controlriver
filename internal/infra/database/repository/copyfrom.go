// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: copyfrom.go

package repository

import (
	"context"
)

// iteratorForAddAccountCategories implements pgx.CopyFromSource.
type iteratorForAddAccountCategories struct {
	rows                 []AddAccountCategoriesParams
	skippedFirstNextCall bool
}

func (r *iteratorForAddAccountCategories) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForAddAccountCategories) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].AccountCategoryID,
		r.rows[0].CategoryCode,
		r.rows[0].ParentID,
		r.rows[0].AccountID,
		r.rows[0].CategoryID,
		r.rows[0].Color,
	}, nil
}

func (r iteratorForAddAccountCategories) Err() error {
	return nil
}

func (q *Queries) AddAccountCategories(ctx context.Context, arg []AddAccountCategoriesParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"account_categories"}, []string{"account_category_id", "category_code", "parent_id", "account_id", "category_id", "color"}, &iteratorForAddAccountCategories{rows: arg})
}
