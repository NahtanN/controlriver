// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: user_query.sql

package repository

import (
	"context"

	"github.com/google/uuid"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users (user_id, name, email) VALUES ($1, $2, $3) RETURNING user_id, name, email
`

type CreateUserParams struct {
	UserID uuid.UUID `json:"user_id"`
	Name   string    `json:"name"`
	Email  string    `json:"email"`
}

type CreateUserRow struct {
	UserID uuid.UUID `json:"user_id"`
	Name   string    `json:"name"`
	Email  string    `json:"email"`
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (CreateUserRow, error) {
	row := q.db.QueryRow(ctx, createUser, arg.UserID, arg.Name, arg.Email)
	var i CreateUserRow
	err := row.Scan(&i.UserID, &i.Name, &i.Email)
	return i, err
}
